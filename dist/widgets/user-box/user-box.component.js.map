{"version":3,"sources":["../../../src/widgets/user-box/user-box.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAkB,MAAO,eAAA,CAAgB;AAClD,OAAO,EAAE,IAAA,EAAK,MAAO,mBAAA,CAAoB;AACzC,OAAO,EAAE,WAAA,EAAY,MAAO,6BAAA,CAA8B;AAC1D,OAAO,EAAE,MAAA,EAAO,MAAO,iBAAA,CAAkB;AAGzC;IAUE,0BAAoB,QAAqB,EAAU,MAAc;QAAjE,iBAGC;QAHmB,aAAQ,GAAR,QAAQ,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QARjE,sEAAsE;QAC/D,gBAAW,GAAU,IAAI,IAAI,CAAC;YACjC,SAAS,EAAE,8BAA8B;YACzC,KAAK,EAAE,2BAA2B;YAClC,SAAS,EAAE,OAAO;YAClB,QAAQ,EAAE,SAAS;SACtB,CAAC,CAAC;QAWK,WAAM,GAAG;YACf,KAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QACzB,CAAC,CAAA;QAVC,wCAAwC;QACxC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAU,IAAK,OAAA,KAAI,CAAC,WAAW,GAAG,IAAI,EAAvB,CAAuB,CAAC,CAAC;IAC/E,CAAC;IAEM,mCAAQ,GAAf;QACE,OAAO;IACT,CAAC;IAKI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,oBAAoB;oBACpB,QAAQ,EAAE,UAAU;oBACpB,mBAAmB;oBACnB,SAAS,EAAE,CAAC,0BAA0B,CAAC;oBACvC,WAAW,EAAE,2BAA2B;iBACzC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,WAAW,GAAG;QACrB,EAAC,IAAI,EAAE,MAAM,GAAG;KACf,EAH6F,CAG7F,CAAC;IACF,uBAAC;CApCD,AAoCC,IAAA;SApCY,gBAAgB","file":"user-box.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../../models/user';\r\nimport { UserService } from '../../services/user.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nexport class UserBoxComponent implements OnInit {\r\n\r\n  // default user, only an example, please use the userService to modify\r\n  public currentUser: User =  new User({\r\n      avatarUrl: 'assets/img/user2-160x160.jpg',\r\n      email: 'weber.antoine@outlook.com',\r\n      firstname: 'WEBER',\r\n      lastname: 'Antoine'\r\n  });\r\n\r\n  constructor(private userServ: UserService, private router: Router) {\r\n    // se connecter au modif du user courant\r\n    this.userServ.currentUser.subscribe((user: User) => this.currentUser = user);\r\n  }\r\n\r\n  public ngOnInit() {\r\n    // TODO\r\n  }\r\n\r\n  private logout = (): void => {\r\n    this.userServ.logout();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  /* tslint:disable */\r\n  selector: '.userBox',\r\n  /* tslint:enable */\r\n  styleUrls: ['./user-box.component.css'],\r\n  templateUrl: './user-box.component.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: UserService, },\n{type: Router, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}