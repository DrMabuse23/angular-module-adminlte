{"version":3,"sources":["../../../../src/widgets/notification-box/notification-box.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAkB,MAAO,eAAA,CAAgB;AAElD,OAAO,EAAE,oBAAA,EAAqB,MAAO,sCAAA,CAAuC;AAG5E,OAAO,EAAE,aAAA,EAAc,MAAO,+BAAA,CAAgC;AAG9D;IAKI,kCAAqB,SAA+B,EAAU,MAAqB;QAA9D,cAAS,GAAT,SAAS,CAAsB;QAAU,WAAM,GAAN,MAAM,CAAe;QAC/E,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC5B,CAAC;IAEM,2CAAQ,GAAf;QAAA,iBAOC;QANG,uEAAuE;QACvE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,UAAE,KAAqB;YAC1D,KAAI,CAAC,MAAM,CAAC,GAAG,CAAE,iBAAiB,EAAE,IAAI,EAAE,uBAAuB,EAAE,IAAI,CAAE,CAAC;YAC1E,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC;IAEE,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,oBAAoB;oBACpB,QAAQ,EAAE,mBAAmB;oBAC7B,mBAAmB;oBACnB,SAAS,EAAE,CAAC,kCAAkC,CAAC;oBAC/C,WAAW,EAAE,mCAAmC;iBACnD,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,oBAAoB,GAAG;QAC9B,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAH6F,CAG7F,CAAC;IACF,+BAAC;CAhCD,AAgCC,IAAA;SAhCY,wBAAwB","file":"notification-box.component.js","sourceRoot":"","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Notification } from '../../models/notification';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\nimport { Http } from '@angular/http';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LoggerService } from '../../services/logger.service';\r\n\r\n\r\nexport class NotificationBoxComponent implements OnInit {\r\n\r\n    public notifications: Notification[];\r\n    notifLength: {};\r\n\r\n    constructor( private notifServ: NotificationsService, private logger: LoggerService ) {\r\n        this.notifications = [];\r\n    }\r\n\r\n    public ngOnInit() {\r\n        // Every incoming notification changes entire local notification Array.\r\n        this.notifServ.notifications.subscribe(( notif: Notification[] ) => {\r\n            this.logger.log( 'NotificationBox', null, 'RECEIVED.NOTIFICATION', null );\r\n            this.notifications = notif;\r\n            this.notifLength = { 0: this.notifications.length };\r\n        });\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    /* tslint:disable */\r\n    selector: '.notificationsBox',\r\n    /* tslint:enable */\r\n    styleUrls: ['./notification-box.component.css'],\r\n    templateUrl: './notification-box.component.html'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NotificationsService, },\n{type: LoggerService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}