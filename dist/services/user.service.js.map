{"version":3,"sources":["../../src/services/user.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAK,MAAO,gBAAA,CAAiB;AACtC,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAc,aAAA,EAAc,MAAO,SAAA,CAAU;AACpD,OAAO,EAAE,MAAA,EAAO,MAAO,iBAAA,CAAkB;AAGzC;IAGI,qBACU,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAHjB,gBAAW,GAAwB,IAAI,aAAa,CAAQ,CAAC,CAAE,CAAC;QAKrE,OAAO;IACT,CAAC;IAEM,oCAAc,GAArB,UAAuB,IAAU;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;IAChC,CAAC;IAEM,4BAAM,GAAb;QACE,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,CAAE,IAAI,CAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IACE,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,GAAG;KACf,EAF6F,CAE7F,CAAC;IACF,kBAAC;CA1BD,AA0BC,IAAA;SA1BY,WAAW","file":"user.service.js","sourceRoot":"","sourcesContent":["import { User } from '../models/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject } from 'rxjs/Rx';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\nexport class UserService {\r\n    public currentUser: ReplaySubject<User> = new ReplaySubject<User>( 1 );\r\n\r\n    constructor(\r\n      private router: Router\r\n    ) {\r\n      // TODO\r\n    }\r\n\r\n    public setCurrentUser( user: User ) {\r\n      this.currentUser.next( user );\r\n    }\r\n\r\n    public logout() {\r\n      const user = new User();\r\n      user.connected = false;\r\n      this.setCurrentUser( user );\r\n      this.router.navigate(['login']);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}