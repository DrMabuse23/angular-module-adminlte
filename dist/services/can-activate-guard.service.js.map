{"version":3,"sources":["../../src/services/can-activate-guard.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAe,MAAA,EAAO,MAAO,iBAAA,CAAkB;AACtD,OAAO,EAAE,WAAA,EAAY,MAAO,gBAAA,CAAiB;AAG7C;IAGE,0BACU,MAAc,EACd,WAAwB;QAFlC,iBAOC;QANS,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAJ1B,cAAS,GAAG,KAAK,CAAC;QAMxB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1C,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sCAAW,GAAlB;QACE,kCAAkC;QAClC,EAAE,CAAC,CAAE,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAE,OAAO,CAAE,CAAE,CAAC;QACtC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,GAAG;QAChB,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAH6F,CAG7F,CAAC;IACF,uBAAC;CA3BD,AA2BC,IAAA;SA3BY,gBAAgB","file":"can-activate-guard.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { UserService } from './user.service';\r\n\r\n\r\nexport class CanActivateGuard implements CanActivate {\r\n  private connected = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private userService: UserService\r\n  ) {\r\n    this.userService.currentUser.subscribe((user) => {\r\n      this.connected = user.connected;\r\n    });\r\n  }\r\n\r\n  public canActivate() {\r\n    // test here if you user is logged\r\n    if ( !this.connected ) {\r\n      this.router.navigate( [ 'login' ] );\r\n    }\r\n    return this.connected;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, },\n{type: UserService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}